{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","activeTab","selectedTabId","onTabSelected","className","map","tab","id","href","onClick","e","currentTarget","title","content","App","useState","setActiveTab","slice","ReactDOM","render","document","getElementById"],"mappings":"iMAcaA,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAACC,GAAD,OACR,oBACEF,UAAWH,IAAcK,EAAIC,GAAK,YAAc,GAChD,UAAQ,MAFV,SAKE,mBACEC,KAAI,WAAMF,EAAIC,IACdE,QAAS,SAACC,GACJA,EAAEC,cAAcJ,KAAON,GACzBE,EAAcO,EAAEC,cAAcJ,KAGlC,UAAQ,UACRA,GAAID,EAAIC,GARV,SAUGD,EAAIM,SAZFN,EAAIM,cAmBjB,qBAAKR,UAAU,QAAQ,UAAQ,aAA/B,6BACgBF,SCzCTF,EAAO,CAClB,CAAEO,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAkCC,mBAAS,SAA3C,mBAAOd,EAAP,KAAkBe,EAAlB,KACMd,EAAgBD,EAAUgB,OAAO,GAavC,OACE,sBAAKb,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,uCAC0BF,KAG1B,cAAC,EAAD,CACEF,KAAMA,EACNC,UAAWA,EACXC,cAAeA,EACfC,cArBe,SAACI,GAChBA,IAAOP,EAAK,GAAGO,IACZA,IAAOP,EAAK,GAAGO,IACfA,IAAOP,EAAK,GAAGO,IAEpBS,EAAa,QAGfA,EAAaT,UCtBjBW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.11debea2.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  tabs: {\n    id: string;\n    title: string;\n    content: string;\n  }[];\n\n  activeTab: string;\n  selectedTabId: string;\n  onTabSelected: (id: string) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  activeTab,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              className={activeTab === tab.id ? 'is-active' : ''}\n              data-cy=\"Tab\"\n              key={tab.title}\n            >\n              <a\n                href={`#${tab.id}`}\n                onClick={(e: React.MouseEvent<HTMLAnchorElement>) => {\n                  if (e.currentTarget.id !== activeTab) {\n                    onTabSelected(e.currentTarget.id);\n                  }\n                }}\n                data-cy=\"TabLink\"\n                id={tab.id}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {`Some text ${selectedTabId}`}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [activeTab, setActiveTab] = useState('tab-1');\n  const selectedTabId = activeTab.slice(-1);\n\n  const handlerClick = (id: string) => {\n    if (id !== tabs[0].id\n        || id !== tabs[1].id\n        || id !== tabs[2].id\n    ) {\n      setActiveTab('ab-1');\n    }\n\n    setActiveTab(id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is Tab ${selectedTabId}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        activeTab={activeTab}\n        selectedTabId={selectedTabId}\n        onTabSelected={handlerClick}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}